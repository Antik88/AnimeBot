import time
import logging
import parse_anime as paeser

from random import randint as rand
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

TOKEN = "6197474322:AAEWCPB5AG2uDOR6KjmP3xwONOg4xetIuvA"
MSG = "–°–º–æ—Ç—Ä–µ–ª –ª–∏ —Ç—ã –∞–Ω–∏–º–µ —Å–µ–≥–æ–¥—è, {}?"
HELP_COMMAND = """
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
üëç anime - –∫–∞–∫-—Ç–æ –∞–Ω–∏–º–µ
‚û°Ô∏è next - —Å–ª–µ–¥—É—é—â–µ–µ –∞–Ω–º–∏–µ
ü§ì help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
"""

kb = ReplyKeyboardMarkup(resize_keyboard=True)
get_btn = KeyboardButton('',)

kb.add(KeyboardButton('ü§ì help')).insert(KeyboardButton('üëç anime')).insert(KeyboardButton('‚û°Ô∏è next'))

bot = Bot(token=TOKEN)
dp = Dispatcher(bot=bot)

@dp.message_handler(commands=['start'])
async def start_hendler(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    user_full_name = message.from_user.full_name
    logging.info(f'{user_id=} {user_full_name=} {time.asctime()}')
    await message.answer(f"–°–º–æ—Ç—Ä–µ–ª –ª–∏ —Ç—ã –∞–Ω–∏–º–µ —Å–µ–≥–æ–¥—è, {user_name}?", reply_markup=kb)

@dp.message_handler(text='ü§ì help')
async def help_command(message: types.Message):
    await message.answer(text=HELP_COMMAND)

@dp.message_handler(text='üëç anime')
async def send_img(message: types.Message):
    data = paeser.read('data.json')

    title_id = rand(0,10)
    title_name = data['title'][title_id]["name"]
    date = data['title'][title_id]["date"]
    img_url = data['title'][title_id]["img"]
    
    caption = f'{title_name}\n–ì–æ–¥: {date}'
    await bot.send_photo(message.from_user.id, img_url, caption=caption)

@dp.message_handler(text='‚û°Ô∏è next')
async def send_img(message: types.Message):
    data = paeser.read('data.json')
    

def getRandAnime(filename):
    title = paeser.Title
    
    # return –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ –∞–Ω–∏–º–µ (–Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫–ª–∞—Å—Å –∞–Ω–∏–º–µ –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –∏–∑ —Ç—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞ (parse_anime.py))
    pass




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)